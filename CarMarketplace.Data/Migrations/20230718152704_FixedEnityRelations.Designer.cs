// <auto-generated />
using System;
using CarMarketplace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarMarketplace.Data.Migrations
{
    [DbContext(typeof(CarMarketplaceDbContext))]
    [Migration("20230718152704_FixedEnityRelations")]
    partial class FixedEnityRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarMarketplace.Data.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.Property<int>("EuroStandart")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Odometer")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<Guid>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TechnicalSpecificationURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransmissionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VinNumber")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("EngineId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.HasIndex("SellerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.CarManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(29)
                        .HasColumnType("nvarchar(29)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Huyndai"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Renault"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Peugeot"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Opel"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Jaguar"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Kia"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Lexus"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Subaru"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Citroën"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Dacia"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Land Rover"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Mazda"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Mini"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Seat"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Škoda"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Smart"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Suzuki"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Rolls-Royce"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Ferrari"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Lamborghini"
                        });
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasMaxLength(29)
                        .HasColumnType("nvarchar(29)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufacturerName = "Audi",
                            ModelName = "80"
                        },
                        new
                        {
                            Id = 2,
                            ManufacturerName = "Audi",
                            ModelName = "90"
                        },
                        new
                        {
                            Id = 3,
                            ManufacturerName = "Audi",
                            ModelName = "100"
                        },
                        new
                        {
                            Id = 4,
                            ManufacturerName = "Audi",
                            ModelName = "A1"
                        },
                        new
                        {
                            Id = 5,
                            ManufacturerName = "Audi",
                            ModelName = "A3"
                        },
                        new
                        {
                            Id = 6,
                            ManufacturerName = "Audi",
                            ModelName = "A4"
                        },
                        new
                        {
                            Id = 7,
                            ManufacturerName = "Audi",
                            ModelName = "A5"
                        },
                        new
                        {
                            Id = 8,
                            ManufacturerName = "Audi",
                            ModelName = "A6"
                        },
                        new
                        {
                            Id = 9,
                            ManufacturerName = "Audi",
                            ModelName = "A8"
                        },
                        new
                        {
                            Id = 10,
                            ManufacturerName = "Audi",
                            ModelName = "Q2"
                        },
                        new
                        {
                            Id = 11,
                            ManufacturerName = "Audi",
                            ModelName = "Q3"
                        },
                        new
                        {
                            Id = 12,
                            ManufacturerName = "Audi",
                            ModelName = "Q5"
                        },
                        new
                        {
                            Id = 13,
                            ManufacturerName = "Audi",
                            ModelName = "Q7"
                        },
                        new
                        {
                            Id = 14,
                            ManufacturerName = "Audi",
                            ModelName = "Q8"
                        },
                        new
                        {
                            Id = 15,
                            ManufacturerName = "Audi",
                            ModelName = "TT"
                        },
                        new
                        {
                            Id = 16,
                            ManufacturerName = "Audi",
                            ModelName = "R8"
                        },
                        new
                        {
                            Id = 17,
                            ManufacturerName = "BMW",
                            ModelName = "1 Series"
                        },
                        new
                        {
                            Id = 18,
                            ManufacturerName = "BMW",
                            ModelName = "2 Series"
                        },
                        new
                        {
                            Id = 19,
                            ManufacturerName = "BMW",
                            ModelName = "3 Series"
                        },
                        new
                        {
                            Id = 20,
                            ManufacturerName = "BMW",
                            ModelName = "4 Series"
                        },
                        new
                        {
                            Id = 21,
                            ManufacturerName = "BMW",
                            ModelName = "5 Series"
                        },
                        new
                        {
                            Id = 22,
                            ManufacturerName = "BMW",
                            ModelName = "6 Series"
                        },
                        new
                        {
                            Id = 23,
                            ManufacturerName = "BMW",
                            ModelName = "7 Series"
                        },
                        new
                        {
                            Id = 24,
                            ManufacturerName = "BMW",
                            ModelName = "8 Series"
                        },
                        new
                        {
                            Id = 25,
                            ManufacturerName = "BMW",
                            ModelName = "X1"
                        },
                        new
                        {
                            Id = 26,
                            ManufacturerName = "BMW",
                            ModelName = "X2"
                        },
                        new
                        {
                            Id = 27,
                            ManufacturerName = "BMW",
                            ModelName = "X3"
                        },
                        new
                        {
                            Id = 28,
                            ManufacturerName = "BMW",
                            ModelName = "X4"
                        },
                        new
                        {
                            Id = 29,
                            ManufacturerName = "BMW",
                            ModelName = "X5"
                        },
                        new
                        {
                            Id = 30,
                            ManufacturerName = "BMW",
                            ModelName = "X6"
                        },
                        new
                        {
                            Id = 31,
                            ManufacturerName = "BMW",
                            ModelName = "X7"
                        },
                        new
                        {
                            Id = 32,
                            ManufacturerName = "BMW",
                            ModelName = "i3"
                        },
                        new
                        {
                            Id = 33,
                            ManufacturerName = "BMW",
                            ModelName = "i8"
                        },
                        new
                        {
                            Id = 34,
                            ManufacturerName = "BMW",
                            ModelName = "M1"
                        },
                        new
                        {
                            Id = 35,
                            ManufacturerName = "BMW",
                            ModelName = "M2"
                        },
                        new
                        {
                            Id = 36,
                            ManufacturerName = "BMW",
                            ModelName = "M3"
                        },
                        new
                        {
                            Id = 37,
                            ManufacturerName = "BMW",
                            ModelName = "M4"
                        },
                        new
                        {
                            Id = 38,
                            ManufacturerName = "BMW",
                            ModelName = "M5"
                        },
                        new
                        {
                            Id = 39,
                            ManufacturerName = "BMW",
                            ModelName = "M6"
                        },
                        new
                        {
                            Id = 40,
                            ManufacturerName = "BMW",
                            ModelName = "M8"
                        },
                        new
                        {
                            Id = 41,
                            ManufacturerName = "BMW",
                            ModelName = "Z1"
                        },
                        new
                        {
                            Id = 42,
                            ManufacturerName = "BMW",
                            ModelName = "Z3"
                        },
                        new
                        {
                            Id = 43,
                            ManufacturerName = "BMW",
                            ModelName = "Z4"
                        },
                        new
                        {
                            Id = 44,
                            ManufacturerName = "BMW",
                            ModelName = "Z8"
                        });
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("CoolantCapacity")
                        .HasColumnType("float");

                    b.Property<int?>("Displacement")
                        .HasColumnType("int");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int");

                    b.Property<double?>("OilCapacity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.Seller", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Seller");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.Car", b =>
                {
                    b.HasOne("CarMarketplace.Data.Models.ApplicationUser", null)
                        .WithMany("CarsOnSale")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("CarMarketplace.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarMarketplace.Data.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarMarketplace.Data.Models.Engine", "Engine")
                        .WithMany()
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarMarketplace.Data.Models.CarManufacturer", "Make")
                        .WithMany("Cars")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarMarketplace.Data.Models.CarModel", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarMarketplace.Data.Models.Seller", "Seller")
                        .WithMany("CarOnSale")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Color");

                    b.Navigation("Engine");

                    b.Navigation("Make");

                    b.Navigation("Model");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.Seller", b =>
                {
                    b.HasOne("CarMarketplace.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("CarMarketplace.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("CarMarketplace.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarMarketplace.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("CarMarketplace.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("CarsOnSale");
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.CarManufacturer", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.CarModel", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarMarketplace.Data.Models.Seller", b =>
                {
                    b.Navigation("CarOnSale");
                });
#pragma warning restore 612, 618
        }
    }
}
