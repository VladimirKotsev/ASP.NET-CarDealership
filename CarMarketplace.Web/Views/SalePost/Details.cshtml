@model SalePostViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject IUserService UserService;

@{
    ICollection<Guid> userFavourites = new HashSet<Guid>();
    bool isLogged = SignInManager.IsSignedIn(User);
    if (isLogged)
    {
        userFavourites = await UserService.GetUserFavouritePostIdsAsync(User.FindFirstValue(ClaimTypes.NameIdentifier));
    }
    ViewData["CloudDomain"] = "https://res.cloudinary.com/carmarketplace/image/upload/";
    var image = "";
    var imagePublicId = "";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-7">
            <div class="owl-carousel owl-theme">
                <div class="carousel-item active">
                    @{
                        var publicId = Model.ThumbnailImage;
                        image = ViewData["CloudDomain"] + publicId;
                    }

                    <img src="@image" class="img-fluid rounded float-end" alt="@Model.Car.Make.Name @Model.Car.Model.ModelName">
                </div>
                @foreach (var imageId in Model.ImageUrls.Split(", ", StringSplitOptions.RemoveEmptyEntries))
                {
                    image = ViewData["CloudDomain"] + imageId;
                    <img src="@image" class="img-fluid rounded float-end" alt="@Model.Car.Make.Name @Model.Car.Model.ModelName">
                }
            </div>
            <div class="row justify-items-between ms-4 gap-3">
                @for (int i = 0; i < Model.ImageUrls.Split(", ", StringSplitOptions.RemoveEmptyEntries).Length; i++)
                {
                    imagePublicId = Model.ImageUrls.Split(", ", StringSplitOptions.RemoveEmptyEntries)[i];
                    image = ViewData["CloudDomain"] + imagePublicId;
                    <div class="col-2">
                        <img src="@image" class="rounded img-nav" onclick="loadCarouselItem(@i)" alt="@Model.Car.Make.Name @Model.Car.Model.ModelName">
                    </div>
                }
            </div>
        </div>
        <div class="col-md-5 mt-3">
            @{
                var displacement = (@Model.Car.Engine.Displacement / 100).ToString().Insert(1, ".") + "l";
            }
            <h2>Manufacturer: <strong>@Model.Car.Make.Name</strong></h2>
            <h2>Car Model: <strong>@Model.Car.Model.ModelName</strong></h2>
            <hr />
            <div class="row">
                <span class="fs-3 col-10">Year: <span class="fst-italic">@Model.Car.Year</span></span>
                @if (isLogged)
                {
                    <div class="col-2 text-end">
                        @if (userFavourites.Contains(Model.Id))
                        {
                            <button class="heart-button active bg-light" onclick="toggleHeart(this, '@Html.Raw(Model.Id)')">
                                <svg class="heart-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C15.09 3.81 16.76 3 18.5 3 21.58 3 24 5.42 24 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" /></svg>
                            </button>
                        }
                        else
                        {
                            <button class="heart-button bg-light" onclick="toggleHeart(this, '@Html.Raw(Model.Id)')">
                                <svg class="heart-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C15.09 3.81 16.76 3 18.5 3 21.58 3 24 5.42 24 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" /></svg>
                            </button>
                        }
                    </div>
                }
            </div>
            <p></p>
            <p class="fs-3">Color: <span class="fst-italic">@Model.Car.Color.Name</span></p>
            <p class="fs-3">Price: <span class="fst-italic">@Model.Price BGN</span></p>
            <p class="fs-3">Engine: <span class="fst-italic">@displacement @Model.Car.Engine.FuelType</span></p>
            <p class="fs-3">Transmission: <span class="fst-italic">@Model.Car.TransmissionType</span></p>
            <p class="fs-3">Category: <span class="fst-italic">@Model.Car.Category.Name</span></p>
            <p class="fs-3">@Model.Seller.City.Province.ProvinceName, @Model.Seller.City.CityName</p>
            <hr />
            <div class="row d-inline">
                <span class="fs-4 fst-italic text-start float-start col-6">@Model.CreatedOn.ToString("HH:mm:ss dd/MM/yyyy")</span>
                @if (Model.Likes > 0)
                {
                    <span class="text-end float-end fst-italic col-3 fs-4 fw-bolder">Likes: <span id="like-span">@Model.Likes</span></span>
                }
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="row justify-items-center border p-3">
            <div class="col-md-4">
                <h3>Engine specifications:</h3>
                <hr />
                <p class="fs-4">Displacement: @Model.Car.Engine.Displacement</p>
                <p class="fs-4">Horsepower: @Model.Car.Engine.Horsepower</p>
                <p class="fs-4">Fuel: @Model.Car.Engine.FuelType</p>
            </div>
            <div class="col-md-4">
                <h3>Car specifications:</h3>
                <hr />
                <p class="fs-4">Euro Standart: @Model.Car.EuroStandart</p>
                <p class="fs-4">Odometer: @Model.Car.Odometer</p>
                @if (Model.Car.TechnicalSpecificationURL != null)
                {
                    <a href="@Model.Car.TechnicalSpecificationURL" class="fs-4 text-decoration-none">Techical specifications</a>
                }
                @if (Model.Car.VinNumber != null)
                {
                    <p class="fs-4">Vin: @Model.Car.VinNumber</p>
                }
            </div>
            <div class="col-md-4">
                <h3>Seller:</h3>
                <hr />
                <p class="fs-4">First Name: @Model.Seller.FirstName</p>
                <p class="fs-4">Last Name: @Model.Seller.LastName</p>
                @if (SignInManager.IsSignedIn(User))
                {
                    <p class="fs-4">Phone number: @Model.Seller.PhoneNumber</p>
                }
            </div>
        </div>
    </div>
    @if (Model.Car.Description != null)
    {
        <div class="row mt-5">
            <div class="col-md-12">
                <h2>Additional Details</h2>
                <p class="fs-3">
                    @Model.Car.Description
                </p>
            </div>
        </div>
    }
</div>

@section Scripts
    {
    <script>
        $(document).ready(function () {
            $(".owl-carousel").owlCarousel({
                loop: true,
                nav: true,
                navText: ["<i class='fas fa-chevron-left'></i>", "<i class='fas fa-chevron-right'></i>"],
                responsive: {
                    0: {
                        items: 1
                    }
                }
            });
        });

        function loadCarouselItem(position) {
            $(".owl-carousel").trigger('to.owl.carousel', position);
        };
    </script>

    <script>
        function toggleHeart(button, postId) {
            button.classList.toggle('active');

            const data = {
                postId: postId,
            };

            if (!button.classList.contains('active')) {

                $.ajax({
                    contentType: "application/json",
                    type: 'POST',
                    url: '/User/RemoveFavourite',
                    data: JSON.stringify(data),
                    success: function () {

                        var span = document.querySelector('#like-span')
                        var intValue = parseInt(span.textContent) - 1;
                        span.classList.add('invisible');
                        span.textContent = intValue;
                        span.classList.remove('invisible');
                    }
                });

            }
            else {

                $.ajax({
                    contentType: "application/json",
                    type: 'POST',
                    url: '/User/AddFavourite',
                    data: JSON.stringify(data),
                    success: function () {

                        var span = document.querySelector('#like-span')
                        var intValue = parseInt(span.textContent) + 1;
                        span.classList.add('invisible');
                        span.textContent = intValue;
                        span.classList.remove('invisible');
                    }
                });
            }
        }
    </script>

}